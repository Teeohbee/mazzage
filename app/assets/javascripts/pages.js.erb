//= require ./phaser.min.js
$(document).on('turbolinks:load', function() {
  const urlPath = $(location).attr("pathname")

  function preload() {
    this.load.image('sky', "<%= asset_path('gam/sky.png') %>");
    this.load.image('ground', "<%= asset_path('gam/platform.png') %>");
    this.load.image('star', "<%= asset_path('gam/star.png') %>");
    this.load.image('bomb', "<%= asset_path('gam/bomb.png') %>");
    this.load.spritesheet('dude', "<%= asset_path('gam/dude.png') %>", { frameWidth: 32, frameHeight: 48 });
  }

  var platforms;
  var player;

  function create() {
    this.add.image(400, 300, 'sky');

    platforms = this.physics.add.staticGroup();

    platforms.create(400, 568, 'ground').setScale(2).refreshBody();

    platforms.create(600, 400, 'ground');
    platforms.create(50, 250, 'ground');
    platforms.create(750, 22, 'ground');

    player = this.physics.add.sprite(100, 450, 'dude');

    player.setBounce(0.2);
    player.setCollideWorldBounds(true);

    this.anims.create({
      key: 'left',
      frames: this.anims.generateFrameNumbers('dude', { start: 0, end: 3 }),
      frameRate: 10,
      repeat: -1
    });

    this.anims.create({
      key: 'turn',
      frames: [ { key: 'dude', frame: 4 } ],
      frameRate: 20
    });

    this.anims.create({
      key: 'right',
      frames: this.anims.generateFrameNumbers('dude', { start: 5, end: 8 }),
      frameRate: 10,
      repeat: -1
    });

    this.physics.add.collider(player, platforms);

    cursors = this.input.keyboard.createCursorKeys();
  }

  function update() {
    if (cursors.left.isDown) {
      player.setVelocityX(-160);
      player.anims.play('left', true);
    }
    else if (cursors.right.isDown) {
      player.setVelocityX(160);
      player.anims.play('right', true);
    } else {
      player.setVelocityX(0);
      player.anims.play('turn', true);
    }

    if (cursors.up.isDown && player.body.touching.down) {
      player.setVelocityY(-330);
    }

  }

  const config = {
    parent: 'idofcontainer',
  	type: Phaser.AUTO,
  	width: 800,
  	height: 600,
    physics: {
      default: 'arcade',
      arcade: {
        gravity: { y: 300 },
        debug: false
      }
    },
  	scene: {
      preload,
      create,
      update
  	}
  }

  if(urlPath == "/pages/gam") {
    const game = new Phaser.Game(config)
  }
})
